name: Build Pipeline

on: [push]

jobs: 
  build: 
    name: "Build Packages"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Setup
      run: yarn install
    - name: Build
      run: yarn run build-packages
    - name: Save Built Files
      uses: actions/upload-artifact@v2
      with:
        name: built-repo
        path: packages

  lint: 
    name: "Lint Packages"
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [14.x] 

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Download Built Files
      uses: actions/download-artifact@v2
      with:
        name: built-repo
        path: packages
    - name: Setup
      run: yarn install
    - name: Lint
      run: yarn lint

  test: 
    name: "Test Packages"
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [14.x] 

    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Download Built Files
      uses: actions/download-artifact@v2
      with:
        name: built-repo
        path: packages
    - name: Setup
      run: yarn install
    - name: Run Tests
      run: yarn test
    - name: Save Coverage
      uses: actions/upload-artifact@v2
      with:
        name: built-repo
        path: coverage

  coverage:
    name: "Upload Coverage"
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v2
      with: 
        fetch-depth: 0
    - name: Download Coverage
      uses: actions/download-artifact@v2
      with:
        name: built-repo
        path: coverage
    - name: Upload Coverage 
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/clover.xml
        fail_ci_if_error: true 
        verbose: true)    

  publish-nightly:
    name: "Publish Packages (Nightly)"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    needs: [test, lint]

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Download Built Files
      uses: actions/download-artifact@v2
      with:
        name: built-repo
        path: packages
    - name: Setup
      run: yarn install
    - name: Apply Versioning
      run: yarn publish-nightly:apply
    - name: Publish
      run: yarn publish-nightly:run
      env:
        YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Tag
      run: yarn publish-nightly:tag
      env:
        YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Save Versioning
      uses: stefanzweifel/git-auto-commit-action@v4
      with: 
        commit_message: Automatic Versioning
        commit_options: '--signoff'


  publish:
    name: "Publish Packages"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [test, lint]

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Download Built Files
      uses: actions/download-artifact@v2
      with:
        name: built-repo
        path: packages
    - name: Setup
      run: yarn install
    - name: Apply Versioning
      run: yarn publish:apply
    - name: Publish
      run: yarn publish:run
      env:
        YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Tag
      run: yarn publish:tag
      env:
        YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Save Versioning
      uses: stefanzweifel/git-auto-commit-action@v4
      with: 
        commit_message: Automatic Versioning
        commit_options: '--signoff'
